# version: 0.2
# phases:
#   install: 
#     commands:
#       - nohup /usr/local/bin/dockerd --host=unix:///var/run/docker.sock --host=tcp://127.0.0.1:2375 --storage-driver=overlay2 &
#       - timeout 15 sh -c "until docker info; do echo .; sleep 1; done"
#   pre_build:
#     commands:
#       - echo Logging in to Amazon ECR...
#       - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 798092881332.dkr.ecr.ap-south-1.amazonaws.com/terraform_img:latest
#   build:
#     commands:
#       - echo Building the Terraform environment...
#       - docker pull 798092881332.dkr.ecr.ap-south-1.amazonaws.com/terraform_img:latest
#       - pwd
#       - docker run --rm 798092881332.dkr.ecr.ap-south-1.amazonaws.com/terraform_img:latest terraform init
#       - docker run --rm 798092881332.dkr.ecr.ap-south-1.amazonaws.com/terraform_img:latest terraform plan
#   post_build:
#     commands:
#       - echo Deploying the Terraform resources...
# version: 0.2

# phases:
#   install:
#     commands:
#       - echo "Installing and configuring Docker..."
#       - apt-get update
#       - apt-get install -y apt-transport-https ca-certificates curl software-properties-common
#       - curl -fsSL https://download.docker.com/linux/ubuntu/gpg | apt-key add -
#       - add-apt-repository "deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
#       - apt-get update
#       - apt-get install -y docker-ce
#   pre_build:
#     commands:
#       - echo Logging in to Amazon ECR...
#       - aws ecr get-login-password --region ap-south-1 | docker login --username AWS --password-stdin 798092881332.dkr.ecr.ap-south-1.amazonaws.com/terraform_img:latest
#       - pwd
#   build:
#     commands:
#       - echo Building the Terraform environment...
#       - pwd
#       - docker pull 798092881332.dkr.ecr.ap-south-1.amazonaws.com/terraform_img:latest
#       - docker run --rm 798092881332.dkr.ecr.ap-south-1.amazonaws.com/terraform_img:latest terraform init
#       - docker run --rm 798092881332.dkr.ecr.ap-south-1.amazonaws.com/terraform_img:latest terraform plan
#   post_build:
#     commands:
#       - echo Deploying the Terraform resources...

version: 0.2

phases:
  pre_build:
    commands:
      - echo "Retrieving AWS credentials..."
      #- aws secretsmanager get-secret-value --secret-id arn:aws:secretsmanager:ap-south-1:798092881332:secret:IAM_Creds-qcxfY0 --query SecretString --output text > aws_credentials.json
#       - aws configure set aws_access_key_id $(jq -r '.Access_Key' aws_credentials.json)
#       - aws configure set aws_secret_access_key $(jq -r '.Secret_Access_Key' aws_credentials.json)
  build:
    commands:
      - echo Building the Terraform environment...
      - docker run --rm -v $(pwd):/workspace -w /workspace hashicorp/terraform:1.4.3 init # -backend-config="bucket=tfstatefile-store" -backend-config="key=terraform.tfstate" -backend-config="region=ap-south-1" -backend-config="dynamodb_table=lockid-table"

      #- docker run --rm -v $(pwd):/workspace -w /workspace hashicorp/terraform:1.0.9 init -reconfigure -backend-config="access_key=$(jq -r '.Access_Key' aws_credentials.json)" -backend-config="secret_key=$(jq -r '.Secret_Access_Key' aws_credentials.json)"
      - docker run --rm -v $(pwd):/workspace -w /workspace hashicorp/terraform:1.4.3 plan

  post_build:
    commands:
      - echo Deploying the Terraform resources...
      


     
